// Generated by view binder compiler. Do not edit!
package app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStatlogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final ImageView ivIcon;

  @NonNull
  public final LinearLayout llInfo;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDomain;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvType;

  private ItemStatlogBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout container,
      @NonNull ImageView ivIcon, @NonNull LinearLayout llInfo, @NonNull TextView tvDate,
      @NonNull TextView tvDomain, @NonNull TextView tvTime, @NonNull TextView tvType) {
    this.rootView = rootView;
    this.container = container;
    this.ivIcon = ivIcon;
    this.llInfo = llInfo;
    this.tvDate = tvDate;
    this.tvDomain = tvDomain;
    this.tvTime = tvTime;
    this.tvType = tvType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStatlogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStatlogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_statlog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStatlogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout container = (LinearLayout) rootView;

      id = R.id.iv_icon;
      ImageView ivIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivIcon == null) {
        break missingId;
      }

      id = R.id.ll_info;
      LinearLayout llInfo = ViewBindings.findChildViewById(rootView, id);
      if (llInfo == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_domain;
      TextView tvDomain = ViewBindings.findChildViewById(rootView, id);
      if (tvDomain == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_type;
      TextView tvType = ViewBindings.findChildViewById(rootView, id);
      if (tvType == null) {
        break missingId;
      }

      return new ItemStatlogBinding((LinearLayout) rootView, container, ivIcon, llInfo, tvDate,
          tvDomain, tvTime, tvType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
