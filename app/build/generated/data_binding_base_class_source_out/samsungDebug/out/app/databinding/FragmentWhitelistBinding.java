// Generated by data binding compiler. Do not edit!
package app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import app.R;
import app.ui.whitelist.WhitelistHandler;
import app.ui.whitelist.WhitelistViewModel;
import app.widget.LoadingRecyclerView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentWhitelistBinding extends ViewDataBinding {
  @NonNull
  public final ImageView ivWhitelistEmpty;

  @NonNull
  public final LoadingRecyclerView rvWhitelist;

  @NonNull
  public final SearchView svSearch;

  @NonNull
  public final TextView tvTooltip;

  @Bindable
  protected WhitelistViewModel mViewModel;

  @Bindable
  protected WhitelistHandler mHandler;

  protected FragmentWhitelistBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView ivWhitelistEmpty, LoadingRecyclerView rvWhitelist, SearchView svSearch,
      TextView tvTooltip) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivWhitelistEmpty = ivWhitelistEmpty;
    this.rvWhitelist = rvWhitelist;
    this.svSearch = svSearch;
    this.tvTooltip = tvTooltip;
  }

  public abstract void setViewModel(@Nullable WhitelistViewModel viewModel);

  @Nullable
  public WhitelistViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setHandler(@Nullable WhitelistHandler handler);

  @Nullable
  public WhitelistHandler getHandler() {
    return mHandler;
  }

  @NonNull
  public static FragmentWhitelistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_whitelist, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentWhitelistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentWhitelistBinding>inflateInternal(inflater, R.layout.fragment_whitelist, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentWhitelistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_whitelist, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentWhitelistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentWhitelistBinding>inflateInternal(inflater, R.layout.fragment_whitelist, null, false, component);
  }

  public static FragmentWhitelistBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentWhitelistBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentWhitelistBinding)bind(component, view, R.layout.fragment_whitelist);
  }
}
